{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _DayCell = require('./DayCell.js');\n\nvar _DayCell2 = _interopRequireDefault(_DayCell);\n\nvar _eachDayOfInterval = require('date-fns/eachDayOfInterval');\n\nvar _eachDayOfInterval2 = _interopRequireDefault(_eachDayOfInterval);\n\nvar _isWithinInterval = require('date-fns/isWithinInterval');\n\nvar _isWithinInterval2 = _interopRequireDefault(_isWithinInterval);\n\nvar _isWeekend = require('date-fns/isWeekend');\n\nvar _isWeekend2 = _interopRequireDefault(_isWeekend);\n\nvar _isAfter = require('date-fns/isAfter');\n\nvar _isAfter2 = _interopRequireDefault(_isAfter);\n\nvar _isSameDay = require('date-fns/isSameDay');\n\nvar _isSameDay2 = _interopRequireDefault(_isSameDay);\n\nvar _isBefore = require('date-fns/isBefore');\n\nvar _isBefore2 = _interopRequireDefault(_isBefore);\n\nvar _endOfWeek = require('date-fns/endOfWeek');\n\nvar _endOfWeek2 = _interopRequireDefault(_endOfWeek);\n\nvar _startOfWeek = require('date-fns/startOfWeek');\n\nvar _startOfWeek2 = _interopRequireDefault(_startOfWeek);\n\nvar _endOfDay = require('date-fns/endOfDay');\n\nvar _endOfDay2 = _interopRequireDefault(_endOfDay);\n\nvar _startOfDay = require('date-fns/startOfDay');\n\nvar _startOfDay2 = _interopRequireDefault(_startOfDay);\n\nvar _format = require('date-fns/format');\n\nvar _format2 = _interopRequireDefault(_format);\n\nvar _utils = require('../utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint-disable no-fallthrough */\n\n\nfunction renderWeekdays(styles, dateOptions) {\n  var now = new Date();\n  return _react2.default.createElement('div', {\n    className: styles.weekDays\n  }, (0, _eachDayOfInterval2.default)({\n    start: (0, _startOfWeek2.default)(now, dateOptions),\n    end: (0, _endOfWeek2.default)(now, dateOptions)\n  }).map(function (day, i) {\n    return _react2.default.createElement('span', {\n      className: styles.weekDay,\n      key: i\n    }, (0, _format2.default)(day, 'ddd', dateOptions));\n  }));\n}\n\nvar Month = function (_PureComponent) {\n  _inherits(Month, _PureComponent);\n\n  function Month() {\n    _classCallCheck(this, Month);\n\n    return _possibleConstructorReturn(this, (Month.__proto__ || Object.getPrototypeOf(Month)).apply(this, arguments));\n  }\n\n  _createClass(Month, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var now = new Date();\n      var _props = this.props,\n          displayMode = _props.displayMode,\n          focusedRange = _props.focusedRange,\n          drag = _props.drag,\n          styles = _props.styles;\n      var minDate = this.props.minDate && (0, _startOfDay2.default)(this.props.minDate);\n      var maxDate = this.props.maxDate && (0, _endOfDay2.default)(this.props.maxDate);\n      var monthDisplay = (0, _utils.getMonthDisplayRange)(this.props.month, this.props.dateOptions);\n      var ranges = this.props.ranges;\n\n      if (displayMode === 'dateRange' && drag.status) {\n        var _drag$range = drag.range,\n            startDate = _drag$range.startDate,\n            endDate = _drag$range.endDate;\n        ranges = ranges.map(function (range, i) {\n          if (i !== focusedRange[0]) return range;\n          return _extends({}, range, {\n            startDate: startDate,\n            endDate: endDate\n          });\n        });\n      }\n\n      var showPreview = this.props.showPreview && !drag.disablePreview;\n      return _react2.default.createElement('div', {\n        className: styles.month,\n        style: this.props.style\n      }, this.props.showMonthName ? _react2.default.createElement('div', {\n        className: styles.monthName\n      }, (0, _format2.default)(this.props.month, this.props.monthDisplayFormat, this.props.dateOptions)) : null, this.props.showWeekDays && renderWeekdays(styles, this.props.dateOptions), _react2.default.createElement('div', {\n        className: styles.days,\n        onMouseLeave: this.props.onMouseLeave\n      }, (0, _eachDayOfInterval2.default)({\n        start: monthDisplay.start,\n        end: monthDisplay.end\n      }).map(function (day, index) {\n        var isStartOfMonth = (0, _isSameDay2.default)(day, monthDisplay.startDateOfMonth);\n        var isEndOfMonth = (0, _isSameDay2.default)(day, monthDisplay.endDateOfMonth);\n        var isOutsideMinMax = minDate && (0, _isBefore2.default)(day, minDate) || maxDate && (0, _isAfter2.default)(day, maxDate);\n        return _react2.default.createElement(_DayCell2.default, _extends({}, _this2.props, {\n          ranges: ranges,\n          day: day,\n          preview: showPreview ? _this2.props.preview : null,\n          isWeekend: (0, _isWeekend2.default)(day, _this2.props.dateOptions),\n          isToday: (0, _isSameDay2.default)(day, now),\n          isStartOfWeek: (0, _isSameDay2.default)(day, (0, _startOfWeek2.default)(day, _this2.props.dateOptions)),\n          isEndOfWeek: (0, _isSameDay2.default)(day, (0, _endOfWeek2.default)(day, _this2.props.dateOptions)),\n          isStartOfMonth: isStartOfMonth,\n          isEndOfMonth: isEndOfMonth,\n          key: index,\n          disabled: isOutsideMinMax,\n          isPassive: !(0, _isWithinInterval2.default)(day, {\n            start: monthDisplay.startDateOfMonth,\n            end: monthDisplay.endDateOfMonth\n          }),\n          styles: styles,\n          onMouseDown: _this2.props.onDragSelectionStart,\n          onMouseUp: _this2.props.onDragSelectionEnd,\n          onMouseEnter: _this2.props.onDragSelectionMove,\n          dragRange: drag.range,\n          drag: drag.status\n        }));\n      })));\n    }\n  }]);\n\n  return Month;\n}(_react.PureComponent);\n\nMonth.defaultProps = {};\nMonth.propTypes = {\n  style: _propTypes2.default.object,\n  styles: _propTypes2.default.object,\n  month: _propTypes2.default.object,\n  drag: _propTypes2.default.object,\n  dateOptions: _propTypes2.default.object,\n  preview: _propTypes2.default.shape({\n    startDate: _propTypes2.default.object,\n    endDate: _propTypes2.default.object\n  }),\n  showPreview: _propTypes2.default.bool,\n  displayMode: _propTypes2.default.oneOf(['dateRange', 'date']),\n  minDate: _propTypes2.default.object,\n  maxDate: _propTypes2.default.object,\n  ranges: _propTypes2.default.arrayOf(_DayCell.rangeShape),\n  focusedRange: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  onDragSelectionStart: _propTypes2.default.func,\n  onDragSelectionEnd: _propTypes2.default.func,\n  onDragSelectionMove: _propTypes2.default.func,\n  onMouseLeave: _propTypes2.default.func,\n  monthDisplayFormat: _propTypes2.default.string,\n  showWeekDays: _propTypes2.default.bool,\n  showMonthName: _propTypes2.default.bool\n};\nexports.default = Month;","map":null,"metadata":{},"sourceType":"script"}