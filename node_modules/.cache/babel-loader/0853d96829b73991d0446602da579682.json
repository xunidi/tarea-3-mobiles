{"ast":null,"code":"var _temp,\n    _jsxFileName = \"/Users/Xuni/git/practica walter/reactCourse.CM2019.myFirstApp/src/screens/Users/Users.js\";\n\nimport * as React from 'react';\nimport styles from './Users.module.scss';\nimport WebServices from '../../WebServices/WebServices';\nexport default (_temp = class Users extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: {},\n      countries: ['mexico', 'canada', 'usa', 'india', 'china']\n    };\n\n    this.fetchData = async country => {\n      try {\n        const response = await WebServices.getCountryDetails({\n          country: country\n        }); // const nextState = produce(this.state, (draft) => {\n        // \tdraft.response = response;\n        // });\n        // this.setState(nextState);\n\n        this.setState({\n          response: response[0]\n        });\n        console.log('TCL: fetchData -> response', response);\n      } catch (e) {}\n    };\n\n    this.showData = country => {\n      console.log('TCL: showData -> country', country);\n      this.fetchData(country);\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData('mexico');\n  }\n\n  render() {\n    const _this$state = this.state,\n          response = _this$state.response,\n          countries = _this$state.countries;\n    return React.createElement(\"div\", {\n      className: styles.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, countries.map((country, i) => {\n      return React.createElement(\"li\", {\n        key: i,\n        className: styles.country,\n        onClick: () => this.showData(country),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, country);\n    })), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \" Pa\\xEDs: \", response && response.name), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" Capital: \", response && response.capital), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" Poblaci\\xF3n: \", response && response.population), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Idioma:\", response && response.languages && response.languages.map((item, i) => {\n      return response.languages.length > 1 && i !== response.languages.length - 1 ? ' ' + item.nativeName + ', ' : ' ' + item.nativeName;\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" Regi\\xF3n: \", response && response.region), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Monedas:\", response && response.currencies && response.currencies.map((item, i) => {\n      return response.currencies.length > 1 && i !== response.currencies.length - 1 ? ' ' + item.name + ', ' : ' ' + item.name;\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}, _temp);","map":{"version":3,"sources":["/Users/Xuni/git/practica walter/reactCourse.CM2019.myFirstApp/src/screens/Users/Users.js"],"names":["React","styles","WebServices","Users","PureComponent","state","response","countries","fetchData","country","getCountryDetails","setState","console","log","e","showData","componentDidMount","render","main","map","i","name","capital","population","languages","item","length","nativeName","region","currencies"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from './Users.module.scss';\nimport WebServices from '../../WebServices/WebServices';\n\nexport default (class Users extends React.PureComponent {\n\tstate = {\n\t\tresponse: {},\n\t\tcountries: [ 'mexico', 'canada', 'usa', 'india', 'china' ]\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.fetchData('mexico');\n\t}\n\n\tfetchData = async (country) => {\n\t\ttry {\n\t\t\tconst response = await WebServices.getCountryDetails({\n\t\t\t\tcountry: country\n\t\t\t});\n\t\t\t// const nextState = produce(this.state, (draft) => {\n\t\t\t// \tdraft.response = response;\n\t\t\t// });\n\t\t\t// this.setState(nextState);\n\t\t\tthis.setState({ response: response[0] });\n\n\t\t\tconsole.log('TCL: fetchData -> response', response);\n\t\t} catch (e) {}\n\t};\n\n\tshowData = (country) => {\n\t\tconsole.log('TCL: showData -> country', country);\n\t\tthis.fetchData(country);\n\t};\n\trender() {\n\t\tconst { response, countries } = this.state;\n\t\treturn (\n\t\t\t<div className={styles.main}>\n\t\t\t\t<ul>\n\t\t\t\t\t{countries.map((country, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={i} className={styles.country} onClick={() => this.showData(country)}>\n\t\t\t\t\t\t\t\t{country}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t<ul>\n\t\t\t\t\t<li> País: {response && response.name}</li>\n\t\t\t\t\t<li> Capital: {response && response.capital}</li>\n\t\t\t\t\t<li> Población: {response && response.population}</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tIdioma:\n\t\t\t\t\t\t{response &&\n\t\t\t\t\t\t\tresponse.languages &&\n\t\t\t\t\t\t\tresponse.languages.map((item, i) => {\n\t\t\t\t\t\t\t\treturn response.languages.length > 1 && i !== response.languages.length - 1 ? ' ' + item.nativeName + ', ' : ' ' + item.nativeName;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li> Región: {response && response.region}</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tMonedas:\n\t\t\t\t\t\t{response &&\n\t\t\t\t\t\t\tresponse.currencies &&\n\t\t\t\t\t\t\tresponse.currencies.map((item, i) => {\n\t\t\t\t\t\t\t\treturn response.currencies.length > 1 && i !== response.currencies.length - 1 ? ' ' + item.name + ', ' : ' ' + item.name;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}