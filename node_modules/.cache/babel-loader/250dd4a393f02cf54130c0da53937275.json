{"ast":null,"code":"var _temp,\n    _jsxFileName = \"/Users/Xuni/git/practica walter/reactCourse.CM2019.myFirstApp/src/screens/Users/Users.js\";\n\nimport * as React from 'react';\nimport styles from './Users.module.scss';\nimport WebServices from '../../WebServices/WebServices';\nimport produce from 'immer/dist/immer';\nexport default (_temp = class Users extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cities: [{\n        \"id\": 707860,\n        \"name\": \"Hurzuf\"\n      }, {\n        \"id\": 519188,\n        \"name\": \"Novinki\"\n      }, {\n        \"id\": 1283378,\n        \"name\": \"Gorkhﾄ―"\n      }, {\n        \"id\": 1270260,\n        \"name\": \"State of Haryﾄ］a\"\n      }, {\n        \"id\": 708546,\n        \"name\": \"Holubynka\"\n      }],\n      response: {}\n    };\n\n    this.fetchData = async () => {\n      try {\n        /*const character = '583';\n        \n        const response = await WebServices.getCharacter({\n        \tcharacter\n        });\n        const response2 = await WebServices.getListUsers({});\n        console.log('TCL: Home -> fetchData -> response2', response2);\n        \tconst response3 = await WebServices.createFakeApi({\n        \tname: 'walter',\n        \tjob\n        });\n        console.log('TCL: Home -> fetchData -> response3', response3);\n        const nextState = produce(this.state, (draft) => {\n        \tdraft.response = response;\n        });\n        this.setState(nextState);\n        aliases(response.aliases);*/\n        const idCity = '583';\n        const response = await WebServices.getCity({\n          idCity\n        });\n        console.log('TCL: Home -> fetchData -> response', response);\n        const nextState = produce(this.state, draft => {\n          draft.response = response;\n        });\n        this.setState(nextState);\n      } catch (e) {\n        console.log('TCL: Home -> fetchData -> e', e);\n      }\n    };\n  }\n\n  componentDidMount() {//this.fetchData();\n  }\n\n  render() {\n    const cities = this.state.cities;\n    console.log('TCL: Home -> render -> response', cities);\n    return React.createElement(\"div\", {\n      className: styles.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, cities && cities.length > 0 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Ciudades: \"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, cities.map(item => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, item.name);\n    }))));\n  }\n\n}, _temp);","map":{"version":3,"sources":["/Users/Xuni/git/practica walter/reactCourse.CM2019.myFirstApp/src/screens/Users/Users.js"],"names":["React","styles","WebServices","produce","Users","PureComponent","state","cities","response","fetchData","idCity","getCity","console","log","nextState","draft","setState","e","componentDidMount","render","main","length","map","item","name"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,wBAAgB,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,aAA1B,CAAwC;AAAA;AAAA;AAAA,SACvDC,KADuD,GAC/C;AACPC,MAAAA,MAAM,EAAE,CACP;AAAE,cAAM,MAAR;AAAgB,gBAAQ;AAAxB,OADO,EAEP;AAAE,cAAM,MAAR;AAAgB,gBAAQ;AAAxB,OAFO,EAGP;AAAE,cAAM,OAAR;AAAiB,gBAAQ;AAAzB,OAHO,EAIP;AAAE,cAAM,OAAR;AAAiB,gBAAQ;AAAzB,OAJO,EAKP;AAAE,cAAM,MAAR;AAAgB,gBAAQ;AAAxB,OALO,CADD;AAQPC,MAAAA,QAAQ,EAAC;AARF,KAD+C;;AAAA,SAevDC,SAfuD,GAe3C,YAAY;AACvB,UAAI;AACH;;;;;;;;;;;;;;;;;AAkBA,cAAMC,MAAM,GAAG,KAAf;AAEA,cAAMF,QAAQ,GAAG,MAAMN,WAAW,CAACS,OAAZ,CAAoB;AAC1CD,UAAAA;AAD0C,SAApB,CAAvB;AAGAE,QAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDL,QAAlD;AACA,cAAMM,SAAS,GAAGX,OAAO,CAAC,KAAKG,KAAN,EAAcS,KAAD,IAAW;AAChDA,UAAAA,KAAK,CAACP,QAAN,GAAiBA,QAAjB;AACA,SAFwB,CAAzB;AAGA,aAAKQ,QAAL,CAAcF,SAAd;AAGA,OA/BD,CA+BE,OAAOG,CAAP,EAAU;AACXL,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CI,CAA3C;AACA;AACD,KAlDsD;AAAA;;AAWvDC,EAAAA,iBAAiB,GAAG,CACnB;AACA;;AAuCDC,EAAAA,MAAM,GAAG;AAAA,UACAZ,MADA,GACW,KAAKD,KADhB,CACAC,MADA;AAERK,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CN,MAA/C;AACA,WAEC;AAAK,MAAA,SAAS,EAAEN,MAAM,CAACmB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEb,MAAM,IACPA,MAAM,CAACc,MAAP,GAAgB,CADf,IAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCd,MAAM,CAACe,GAAP,CAAYC,IAAD,IAAU;AACrB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACC,IAAV,CAAP;AACA,KAFA,CADD,CAFD,CAHF,CAFD;AAgBA;;AAvEsD,CAAxD","sourcesContent":["import * as React from 'react';\nimport styles from './Users.module.scss';\nimport WebServices from '../../WebServices/WebServices';\nimport produce from 'immer/dist/immer';\n\nexport default (class Users extends React.PureComponent {\n\tstate = {\n\t\tcities: [\n\t\t\t{ \"id\": 707860, \"name\": \"Hurzuf\"},\n\t\t\t{ \"id\": 519188, \"name\": \"Novinki\"},\n\t\t\t{ \"id\": 1283378, \"name\": \"Gorkhﾄ―"},\n\t\t\t{ \"id\": 1270260, \"name\": \"State of Haryﾄ］a\"},\n\t\t\t{ \"id\": 708546, \"name\": \"Holubynka\"}\n\t\t],\n\t\tresponse:{}\n\t}\n\tcomponentDidMount() {\n\t\t//this.fetchData();\n\t}\n\n\tfetchData = async () => {\n\t\ttry {\n\t\t\t/*const character = '583';\n\t\t\t\n\t\t\tconst response = await WebServices.getCharacter({\n\t\t\t\tcharacter\n\t\t\t});\n\t\t\tconst response2 = await WebServices.getListUsers({});\n\t\t\tconsole.log('TCL: Home -> fetchData -> response2', response2);\n\n\t\t\tconst response3 = await WebServices.createFakeApi({\n\t\t\t\tname: 'walter',\n\t\t\t\tjob\n\t\t\t});\n\t\t\tconsole.log('TCL: Home -> fetchData -> response3', response3);\n\t\t\tconst nextState = produce(this.state, (draft) => {\n\t\t\t\tdraft.response = response;\n\t\t\t});\n\t\t\tthis.setState(nextState);\n\t\t\taliases(response.aliases);*/\n\t\t\tconst idCity = '583';\n\t\t\t\n\t\t\tconst response = await WebServices.getCity({\n\t\t\t\tidCity\n\t\t\t});\n\t\t\tconsole.log('TCL: Home -> fetchData -> response', response);\n\t\t\tconst nextState = produce(this.state, (draft) => {\n\t\t\t\tdraft.response = response;\n\t\t\t});\n\t\t\tthis.setState(nextState);\n\t\t\t\n\n\t\t} catch (e) {\n\t\t\tconsole.log('TCL: Home -> fetchData -> e', e);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { cities } = this.state;\n\t\tconsole.log('TCL: Home -> render -> response', cities);\n\t\treturn (\n\t\t\t\n\t\t\t<div className={styles.main}>\n\t\t\t\t{cities &&\n\t\t\t\tcities.length > 0 && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>Ciudades: </p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t{cities.map((item) => {\n\t\t\t\t\t\t\treturn <li>{item.name}</li>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}