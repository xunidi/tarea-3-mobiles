{"ast":null,"code":"import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nimport buildLocalizeArrayFn from '../../../_lib/buildLocalizeArrayFn/index.js';\nvar weekdayValues = {\n  narrow: ['di', 'lu', 'ma', 'me', 'je', 've', 'sa'],\n  short: ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.'],\n  long: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi']\n};\nvar monthValues = {\n  short: ['janv.', 'févr.', 'mars', 'avr.', 'mai', 'juin', 'juill.', 'août', 'sept.', 'oct.', 'nov.', 'déc.'],\n  long: ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre']\n};\nvar timeOfDayValues = {\n  uppercase: ['AM', 'PM'],\n  lowercase: ['am', 'pm'],\n  long: ['du matin', 'de l’après-midi', 'du soir']\n};\n\nfunction timeOfDay(dirtyHours, dirtyOptions) {\n  var hours = Number(dirtyHours);\n  var options = dirtyOptions || {};\n  var type = options.type ? String(options.type) : 'long';\n\n  if (type === 'uppercase') {\n    return hours / 12 >= 1 ? timeOfDayValues.uppercase[1] : timeOfDayValues.uppercase[0];\n  } else if (type === 'lowercase') {\n    return hours / 12 >= 1 ? timeOfDayValues.lowercase[1] : timeOfDayValues.lowercase[0];\n  }\n\n  if (hours <= 12) {\n    return timeOfDayValues.long[0];\n  } else if (hours <= 16) {\n    return timeOfDayValues.long[1];\n  } else {\n    return timeOfDayValues.long[2];\n  }\n}\n\nfunction masculineOrdinalNumber(number) {\n  if (number === 1) {\n    return '1er';\n  }\n\n  return number + 'e';\n}\n\nfunction feminineOrdinalNumber(number) {\n  if (number === 1) {\n    return '1re';\n  }\n\n  return number + 'e';\n}\n\nfunction ordinalNumber(dirtyNumber, dirtyOptions) {\n  var number = Number(dirtyNumber);\n  var options = dirtyOptions || {};\n  var unit = options.unit ? String(options.unit) : null;\n\n  if (unit === 'isoWeek' || unit === 'week') {\n    return feminineOrdinalNumber(number);\n  } else {\n    return masculineOrdinalNumber(number);\n  }\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  weekday: buildLocalizeFn(weekdayValues, 'long'),\n  weekdays: buildLocalizeArrayFn(weekdayValues, 'long'),\n  month: buildLocalizeFn(monthValues, 'long'),\n  months: buildLocalizeArrayFn(monthValues, 'long'),\n  timeOfDay: timeOfDay,\n  timesOfDay: buildLocalizeArrayFn(timeOfDayValues, 'long')\n};\nexport default localize;","map":null,"metadata":{},"sourceType":"module"}