{"ast":null,"code":"import axios from 'axios';\nimport WebService from './WebService';\nconst url = 'https://anapioficeandfire.com/api/characters';\nconst urlFakeApi = 'https://reqres.in/api/';\nconst urlWeatherApi = 'http://api.openweathermap.org/data/2.5/weather?';\nconst keyWeatherApi = 'appid=d0b76fd83718eef1932b224506cfb48f'; //const urlCountries = 'https://restcountries.eu/rest/v2/name/';\n\nexport default {\n  async createFakeApi({\n    name,\n    job\n  }) {\n    return await WebService.post(urlFakeApi + 'users', {\n      name,\n      job\n    });\n  },\n\n  async getCharacter({\n    character\n  }) {\n    return await WebService.get(url + '/' + character);\n  },\n\n  async getListUsers() {\n    return await WebService.get(urlFakeApi + 'users?page=2');\n  },\n\n  async getWeatherByCityId({\n    cityId\n  }) {\n    console.log('TCL: getWeatherByCityId -> cityId', cityId);\n    return await WebService.get(urlWeatherApi + 'id=' + cityId + '&' + keyWeatherApi);\n  },\n\n  async getCountryDetails({\n    urlCountries\n  }) {\n    return await WebService.get(urlCountries + '?fullText=true');\n  }\n\n};","map":{"version":3,"sources":["/Users/Xuni/git/practica walter/reactCourse.CM2019.myFirstApp/src/WebServices/WebServices.js"],"names":["axios","WebService","url","urlFakeApi","urlWeatherApi","keyWeatherApi","createFakeApi","name","job","post","getCharacter","character","get","getListUsers","getWeatherByCityId","cityId","console","log","getCountryDetails","urlCountries"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,GAAG,GAAG,8CAAZ;AACA,MAAMC,UAAU,GAAG,wBAAnB;AACA,MAAMC,aAAa,GAAG,iDAAtB;AACA,MAAMC,aAAa,GAAG,wCAAtB,C,CACA;;AAEA,eAAe;AACd,QAAMC,aAAN,CAAoB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAApB,EAAmC;AAClC,WAAO,MAAMP,UAAU,CAACQ,IAAX,CAAgBN,UAAU,GAAG,OAA7B,EAAsC;AAClDI,MAAAA,IADkD;AAElDC,MAAAA;AAFkD,KAAtC,CAAb;AAIA,GANa;;AAOd,QAAME,YAAN,CAAmB;AAAEC,IAAAA;AAAF,GAAnB,EAAkC;AACjC,WAAO,MAAMV,UAAU,CAACW,GAAX,CAAeV,GAAG,GAAG,GAAN,GAAYS,SAA3B,CAAb;AACA,GATa;;AAUd,QAAME,YAAN,GAAqB;AACpB,WAAO,MAAMZ,UAAU,CAACW,GAAX,CAAeT,UAAU,GAAG,cAA5B,CAAb;AACA,GAZa;;AAcd,QAAMW,kBAAN,CAAyB;AAAEC,IAAAA;AAAF,GAAzB,EAAqC;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDF,MAAjD;AACA,WAAO,MAAMd,UAAU,CAACW,GAAX,CAAeR,aAAa,GAAG,KAAhB,GAAwBW,MAAxB,GAAiC,GAAjC,GAAuCV,aAAtD,CAAb;AACA,GAjBa;;AAkBd,QAAMa,iBAAN,CAAwB;AAAEC,IAAAA;AAAF,GAAxB,EAA0C;AACzC,WAAO,MAAMlB,UAAU,CAACW,GAAX,CAAeO,YAAY,GAAG,gBAA9B,CAAb;AACA;;AApBa,CAAf","sourcesContent":["import axios from 'axios';\nimport WebService from './WebService';\n\nconst url = 'https://anapioficeandfire.com/api/characters';\nconst urlFakeApi = 'https://reqres.in/api/';\nconst urlWeatherApi = 'http://api.openweathermap.org/data/2.5/weather?';\nconst keyWeatherApi = 'appid=d0b76fd83718eef1932b224506cfb48f';\n//const urlCountries = 'https://restcountries.eu/rest/v2/name/';\n\nexport default {\n\tasync createFakeApi({ name, job }) {\n\t\treturn await WebService.post(urlFakeApi + 'users', {\n\t\t\tname,\n\t\t\tjob\n\t\t});\n\t},\n\tasync getCharacter({ character }) {\n\t\treturn await WebService.get(url + '/' + character);\n\t},\n\tasync getListUsers() {\n\t\treturn await WebService.get(urlFakeApi + 'users?page=2');\n\t},\n\n\tasync getWeatherByCityId({ cityId }) {\n\t\tconsole.log('TCL: getWeatherByCityId -> cityId', cityId);\n\t\treturn await WebService.get(urlWeatherApi + 'id=' + cityId + '&' + keyWeatherApi);\n\t},\n\tasync getCountryDetails({ urlCountries }) {\n\t\treturn await WebService.get(urlCountries + '?fullText=true');\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}