{"ast":null,"code":"var _temp,\n    _jsxFileName = \"/Users/Xuni/git/practica walter/reactCourse.CM2019.myFirstApp/src/screens/Summary/Summary.js\";\n\nimport * as React from 'react';\nimport styles from './Summary.module.scss';\nimport Table from '../../components/Table/Table';\nimport summaryHeaders from '../../resources/jsons/summaryHeaders.json';\nimport summaryData from '../../resources/jsons/summaryData.json';\nimport { IconTable, IconChart } from '../../resources/svg/Icons';\nimport produce from 'immer/dist/immer';\nimport { Bar } from 'react-chartjs-2';\nimport 'chartjs-plugin-annotation';\nexport default (_temp = class Summary extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: {\n        table: true,\n        chart: false\n      },\n      data: {\n        labels: [],\n        datasets: [{\n          label: 'My Second dataset',\n          fillColor: 'rgba(0,191,255,0.5)',\n          strokeColor: 'rgba(0,191,255,0.8)',\n          highlightFill: 'rgba(100,149,237,0.75)',\n          highlightStroke: 'rgba(100,149,237,1)',\n          data: [10, 11, 12],\n          borderColor: 'grey',\n          borderWidth: 1\n        }]\n      }\n    };\n\n    this.init = () => {\n      const nextState = produce(this.state, draft => {\n        summaryData.forEach((item, i) => {\n          draft.data.labels = draft.data.labels.concat(item.name);\n        });\n      });\n      this.setState(nextState);\n      console.log('TCL: Summary -> init -> nextState', nextState);\n    };\n\n    this.onHandleIcon = item => {\n      const nextState = produce(this.state, draft => {\n        draft.selected.table = false;\n        draft.selected.chart = false;\n        draft.selected[item] = true;\n      });\n      this.setState(nextState);\n    };\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  render() {\n    const _this$state = this.state,\n          selected = _this$state.selected,\n          data = _this$state.data;\n    const data2 = Object.assign({}, data);\n    console.log('TCL: Summary -> render -> data2', data2);\n    console.log('TCL: Summary -> render -> data', data);\n    const headers = summaryHeaders;\n    const options = {\n      annotation: {\n        annotations: [{\n          drawTime: 'afterDatasetsDraw',\n          borderColor: 'red',\n          borderDash: [2, 2],\n          borderWidth: 2,\n          mode: 'vertical',\n          type: 'line',\n          value: 10,\n          scaleID: 'x-axis-0'\n        }]\n      },\n      maintainAspectRation: false\n    };\n    return React.createElement(\"div\", {\n      className: styles.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.icons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.container_icon,\n      onClick: () => this.onHandleIcon('table'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(IconTable, {\n      className: selected.table ? styles.icon_selected : styles.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.container_icon,\n      onClick: () => this.onHandleIcon('chart'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(IconChart, {\n      className: selected.chart ? styles.icon_selected : styles.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), selected.table && React.createElement(\"div\", {\n      className: styles.table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, summaryData.map((data, i) => {\n      data.summary.forEach((item, i) => {\n        item.total = item.sold + item.courtesies + item.promos;\n      });\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, data.name), React.createElement(Table, {\n        data: data.summary,\n        headers: headers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    })), selected.chart && React.createElement(\"div\", {\n      className: styles.chart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: data2,\n      width: 100,\n      height: 50,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })));\n  }\n\n}, _temp);","map":{"version":3,"sources":["/Users/Xuni/git/practica walter/reactCourse.CM2019.myFirstApp/src/screens/Summary/Summary.js"],"names":["React","styles","Table","summaryHeaders","summaryData","IconTable","IconChart","produce","Bar","Summary","PureComponent","state","selected","table","chart","data","labels","datasets","label","fillColor","strokeColor","highlightFill","highlightStroke","borderColor","borderWidth","init","nextState","draft","forEach","item","i","concat","name","setState","console","log","onHandleIcon","componentDidMount","render","data2","Object","assign","headers","options","annotation","annotations","drawTime","borderDash","mode","type","value","scaleID","maintainAspectRation","main","icons","container_icon","icon_selected","icon","map","summary","total","sold","courtesies","promos","title"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from './Summary.module.scss';\nimport Table from '../../components/Table/Table';\nimport summaryHeaders from '../../resources/jsons/summaryHeaders.json';\nimport summaryData from '../../resources/jsons/summaryData.json';\nimport { IconTable, IconChart } from '../../resources/svg/Icons';\nimport produce from 'immer/dist/immer';\nimport { Bar } from 'react-chartjs-2';\nimport 'chartjs-plugin-annotation';\n\nexport default (class Summary extends React.PureComponent {\n\tstate = {\n\t\tselected: {\n\t\t\ttable: true,\n\t\t\tchart: false\n\t\t},\n\t\tdata: {\n\t\t\tlabels: [],\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'My Second dataset',\n\t\t\t\t\tfillColor: 'rgba(0,191,255,0.5)',\n\t\t\t\t\tstrokeColor: 'rgba(0,191,255,0.8)',\n\t\t\t\t\thighlightFill: 'rgba(100,149,237,0.75)',\n\t\t\t\t\thighlightStroke: 'rgba(100,149,237,1)',\n\t\t\t\t\tdata: [ 10, 11, 12 ],\n\t\t\t\t\tborderColor: 'grey',\n\t\t\t\t\tborderWidth: 1\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.init();\n\t}\n\n\tinit = () => {\n\t\tconst nextState = produce(this.state, (draft) => {\n\t\t\tsummaryData.forEach((item, i) => {\n\t\t\t\tdraft.data.labels = draft.data.labels.concat(item.name);\n\t\t\t});\n\t\t});\n\t\tthis.setState(nextState);\n\t\tconsole.log('TCL: Summary -> init -> nextState', nextState);\n\t};\n\n\tonHandleIcon = (item) => {\n\t\tconst nextState = produce(this.state, (draft) => {\n\t\t\tdraft.selected.table = false;\n\t\t\tdraft.selected.chart = false;\n\t\t\tdraft.selected[item] = true;\n\t\t});\n\t\tthis.setState(nextState);\n\t};\n\trender() {\n\t\tconst { selected, data } = this.state;\n\t\tconst data2 = Object.assign({}, data);\n\n\t\tconsole.log('TCL: Summary -> render -> data2', data2);\n\t\tconsole.log('TCL: Summary -> render -> data', data);\n\t\tconst headers = summaryHeaders;\n\t\tconst options = {\n\t\t\tannotation: {\n\t\t\t\tannotations: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdrawTime: 'afterDatasetsDraw',\n\t\t\t\t\t\tborderColor: 'red',\n\t\t\t\t\t\tborderDash: [ 2, 2 ],\n\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\tmode: 'vertical',\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tvalue: 10,\n\t\t\t\t\t\tscaleID: 'x-axis-0'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tmaintainAspectRation: false\n\t\t};\n\n\t\treturn (\n\t\t\t<div className={styles.main}>\n\t\t\t\t<div className={styles.icons}>\n\t\t\t\t\t<div className={styles.container_icon} onClick={() => this.onHandleIcon('table')}>\n\t\t\t\t\t\t<IconTable className={selected.table ? styles.icon_selected : styles.icon} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.container_icon} onClick={() => this.onHandleIcon('chart')}>\n\t\t\t\t\t\t<IconChart className={selected.chart ? styles.icon_selected : styles.icon} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{selected.table && (\n\t\t\t\t\t<div className={styles.table}>\n\t\t\t\t\t\t{summaryData.map((data, i) => {\n\t\t\t\t\t\t\tdata.summary.forEach((item, i) => {\n\t\t\t\t\t\t\t\titem.total = item.sold + item.courtesies + item.promos;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={i}>\n\t\t\t\t\t\t\t\t\t<p className={styles.title}>{data.name}</p>\n\t\t\t\t\t\t\t\t\t<Table data={data.summary} headers={headers} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{selected.chart && (\n\t\t\t\t\t<div className={styles.chart}>\n\t\t\t\t\t\t<Bar data={data2} width={100} height={50} options={options} />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}