{"ast":null,"code":"var _temp,\n    _jsxFileName = \"/Users/Xuni/git/practica walter/reactCourse.CM2019.myFirstApp/src/screens/Users/Users.js\";\n\nimport * as React from 'react';\nimport styles from './Users.module.scss';\nimport WebServices from '../../WebServices/WebServices';\nimport produce from 'immer/dist/immer';\nexport default (_temp = class Users extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cities: [{\n        \"id\": 707860,\n        \"name\": \"Hurzuf\"\n      }, {\n        \"id\": 519188,\n        \"name\": \"Novinki\"\n      }, {\n        \"id\": 1283378,\n        \"name\": \"Gorkhﾄ―"\n      }, {\n        \"id\": 1270260,\n        \"name\": \"State of Haryﾄ］a\"\n      }, {\n        \"id\": 708546,\n        \"name\": \"Holubynka\"\n      }],\n      response: {}\n    };\n\n    this.fetchData = async id => {\n      try {\n        const idCity = id;\n        const response = await WebServices.getCity({\n          idCity\n        });\n        console.log('TCL: Home -> fetchData -> response', response);\n        const nextState = produce(this.state, draft => {\n          draft.response = response;\n        });\n        this.setState(nextState);\n      } catch (e) {\n        console.log('TCL: Home -> fetchData -> e', e);\n      }\n    };\n  }\n\n  componentDidMount() {//this.fetchData();\n  }\n\n  onClickLi(id) {\n    console.log('TCL: id city', id);\n    this.fetchData(id);\n  }\n\n  render() {\n    const _this$state = this.state,\n          cities = _this$state.cities,\n          response = _this$state.response;\n    console.log('TCL: Home -> render -> response', cities);\n    return React.createElement(\"div\", {\n      className: styles.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, cities && cities.length > 0 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Ciudades: \"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, cities.map(item => {\n      return React.createElement(\"li\", {\n        onClick: () => this.onClickLi(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, item.name);\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Clima\", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Descripcion:\", response && response.description)));\n  }\n\n}, _temp);","map":{"version":3,"sources":["/Users/Xuni/git/practica walter/reactCourse.CM2019.myFirstApp/src/screens/Users/Users.js"],"names":["React","styles","WebServices","produce","Users","PureComponent","state","cities","response","fetchData","id","idCity","getCity","console","log","nextState","draft","setState","e","componentDidMount","onClickLi","render","main","length","map","item","name","description"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,wBAAgB,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,aAA1B,CAAwC;AAAA;AAAA;AAAA,SACvDC,KADuD,GAC/C;AACPC,MAAAA,MAAM,EAAE,CACP;AAAE,cAAM,MAAR;AAAgB,gBAAQ;AAAxB,OADO,EAEP;AAAE,cAAM,MAAR;AAAgB,gBAAQ;AAAxB,OAFO,EAGP;AAAE,cAAM,OAAR;AAAiB,gBAAQ;AAAzB,OAHO,EAIP;AAAE,cAAM,OAAR;AAAiB,gBAAQ;AAAzB,OAJO,EAKP;AAAE,cAAM,MAAR;AAAgB,gBAAQ;AAAxB,OALO,CADD;AAQPC,MAAAA,QAAQ,EAAC;AARF,KAD+C;;AAAA,SAqBvDC,SArBuD,GAqB3C,MAAOC,EAAP,IAAc;AACzB,UAAI;AACH,cAAMC,MAAM,GAAGD,EAAf;AAEA,cAAMF,QAAQ,GAAG,MAAMN,WAAW,CAACU,OAAZ,CAAoB;AAC1CD,UAAAA;AAD0C,SAApB,CAAvB;AAGAE,QAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDN,QAAlD;AACA,cAAMO,SAAS,GAAGZ,OAAO,CAAC,KAAKG,KAAN,EAAcU,KAAD,IAAW;AAChDA,UAAAA,KAAK,CAACR,QAAN,GAAiBA,QAAjB;AACA,SAFwB,CAAzB;AAGA,aAAKS,QAAL,CAAcF,SAAd;AAGA,OAbD,CAaE,OAAOG,CAAP,EAAU;AACXL,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CI,CAA3C;AACA;AACD,KAtCsD;AAAA;;AAWvDC,EAAAA,iBAAiB,GAAG,CACnB;AACA;;AAEDC,EAAAA,SAAS,CAACV,EAAD,EAAK;AACbG,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,EAA5B;AACA,SAAKD,SAAL,CAAeC,EAAf;AAEA;;AAqBDW,EAAAA,MAAM,GAAG;AAAA,wBACoB,KAAKf,KADzB;AAAA,UACAC,MADA,eACAA,MADA;AAAA,UACOC,QADP,eACOA,QADP;AAERK,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CP,MAA/C;AACA,WAEC;AAAK,MAAA,SAAS,EAAEN,MAAM,CAACqB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEf,MAAM,IACPA,MAAM,CAACgB,MAAP,GAAgB,CADf,IAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACChB,MAAM,CAACiB,GAAP,CAAYC,IAAD,IAAU;AACrB,aAAO;AAAI,QAAA,OAAO,EAAI,MAAM,KAAKL,SAAL,CAAeK,IAAI,CAACf,EAApB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgDe,IAAI,CAACC,IAArD,CAAP;AACA,KAFA,CADD,CAFD,CAHF,EAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBlB,QAAQ,IAAIA,QAAQ,CAACmB,WAArC,CAFD,CAZD,CAFD;AAoBA;;AA/DsD,CAAxD","sourcesContent":["import * as React from 'react';\nimport styles from './Users.module.scss';\nimport WebServices from '../../WebServices/WebServices';\nimport produce from 'immer/dist/immer';\n\nexport default (class Users extends React.PureComponent {\n\tstate = {\n\t\tcities: [\n\t\t\t{ \"id\": 707860, \"name\": \"Hurzuf\"},\n\t\t\t{ \"id\": 519188, \"name\": \"Novinki\"},\n\t\t\t{ \"id\": 1283378, \"name\": \"Gorkhﾄ―"},\n\t\t\t{ \"id\": 1270260, \"name\": \"State of Haryﾄ］a\"},\n\t\t\t{ \"id\": 708546, \"name\": \"Holubynka\"}\n\t\t],\n\t\tresponse:{}\n\t}\n\tcomponentDidMount() {\n\t\t//this.fetchData();\n\t}\n\n\tonClickLi(id) {\n\t\tconsole.log('TCL: id city', id);\n\t\tthis.fetchData(id);\n\n\t};\n\n\tfetchData = async (id) => {\n\t\ttry {\n\t\t\tconst idCity = id;\n\t\t\t\n\t\t\tconst response = await WebServices.getCity({\n\t\t\t\tidCity\n\t\t\t});\n\t\t\tconsole.log('TCL: Home -> fetchData -> response', response);\n\t\t\tconst nextState = produce(this.state, (draft) => {\n\t\t\t\tdraft.response = response;\n\t\t\t});\n\t\t\tthis.setState(nextState);\n\t\t\t\n\n\t\t} catch (e) {\n\t\t\tconsole.log('TCL: Home -> fetchData -> e', e);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { cities,response } = this.state;\n\t\tconsole.log('TCL: Home -> render -> response', cities);\n\t\treturn (\n\t\t\t\n\t\t\t<div className={styles.main}>\n\t\t\t\t{cities &&\n\t\t\t\tcities.length > 0 && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>Ciudades: </p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t{cities.map((item) => {\n\t\t\t\t\t\t\treturn <li onClick = {() => this.onClickLi(item.id)} >{item.name}</li>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<div>\n\t\t\t\t\tClima\n\t\t\t\t\t<p>Descripcion:{response && response.description}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}