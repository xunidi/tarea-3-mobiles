{"ast":null,"code":"import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nimport buildLocalizeArrayFn from '../../../_lib/buildLocalizeArrayFn/index.js'; // Vietnammese locale reference: http://www.localeplanet.com/icu/vi-VN/index.html\n// Capitalization reference: http://hcmup.edu.vn/index.php?option=com_content&view=article&id=4106%3Avit-hoa-trong-vn-bn-hanh-chinh&catid=2345%3Atham-kho&Itemid=4103&lang=vi&site=134\n\nvar weekdayValues = {\n  narrow: ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'],\n  short: ['CN', 'thứ 2', 'thứ 3', 'thứ 4', 'thứ 5', 'thứ 6', 'thứ 7'],\n  long: ['Chủ Nhật', 'thứ Hai', 'thứ Ba', 'thứ Tư', 'thứ Năm', 'thứ Sáu', 'thứ Bảy']\n};\nvar monthValues = {\n  short: ['thg 1', 'thg 2', 'thg 3', 'thg 4', 'thg 5', 'thg 6', 'thg 7', 'thg 8', 'thg 9', 'thg 10', 'thg 11', 'thg 12'],\n  long: ['tháng Một', 'tháng Hai', 'tháng Ba', 'tháng Tư', 'tháng Năm', 'tháng Sáu', 'tháng Bảy', 'tháng Tám', 'tháng Chín', 'tháng Mười', 'tháng Mười Một', 'tháng Mười Hai'] // `timeOfDay` is used to designate which part of the day it is, when used with 12-hour clock.\n  // Use the system which is used the most commonly in the locale.\n  // For example, if the country doesn't use a.m./p.m., you can use `night`/`morning`/`afternoon`/`evening`:\n  //\n  //   var timeOfDayValues = {\n  //     any: ['in the night', 'in the morning', 'in the afternoon', 'in the evening']\n  //   }\n  //\n  // And later:\n  //\n  //   var localize = {\n  //     // The callback takes the hours as the argument and returns the array index\n  //     timeOfDay: buildLocalizeFn(timeOfDayValues, 'any', function (hours) {\n  //       if (hours >= 17) {\n  //         return 3\n  //       } else if (hours >= 12) {\n  //         return 2\n  //       } else if (hours >= 4) {\n  //         return 1\n  //       } else {\n  //         return 0\n  //       }\n  //     }),\n  //     timesOfDay: buildLocalizeArrayFn(timeOfDayValues, 'any')\n  //   }\n\n};\nvar timeOfDayValues = {\n  // Vietnamese are used to AM/PM borrowing from English, hence `uppercase` and\n  // `lowercase` are just like English but I'm leaving the `long`\n  // format being localized with abbreviations found in some systems (SÁng / CHiều);\n  // however, personally, I don't think `Chiều` sounds appropriate for `PM`\n  // TODO: for `long` version, the values should be 'sáng' 'trưa' 'chiều' 'tối'\n  uppercase: ['AM', 'PM'],\n  lowercase: ['am', 'pm'],\n  long: ['SA', 'CH'] // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'month', 'quarter', 'week', 'isoWeek', 'dayOfYear',\n  // 'dayOfMonth' or 'dayOfWeek'\n\n};\n\nfunction ordinalNumber(dirtyNumber, dirtyOptions) {\n  var options = dirtyOptions || {};\n  var unit = String(options.unit);\n  var number = parseInt(dirtyNumber, 10);\n\n  if (unit === 'quarter') {\n    switch (number) {\n      case 1:\n        return 'một';\n\n      case 2:\n        return 'hai';\n\n      case 3:\n        return 'ba';\n\n      case 4:\n        return 'bốn';\n    }\n  } else if (unit === 'dayOfWeek') {\n    // day of week in Vietnamese has ordinal number meaning, so we should use them\n    switch (number) {\n      case 0:\n        return 'CN';\n\n      case 1:\n        return '2';\n\n      case 2:\n        return '3';\n\n      case 3:\n        return '4';\n\n      case 4:\n        return '5';\n\n      case 5:\n        return '6';\n\n      case 6:\n        return '7';\n    }\n  } else if (unit === 'week' || unit === 'isoWeek') {\n    if (number === 1) {\n      return 'thứ nhất';\n    } else {\n      return 'thứ ' + number;\n    }\n  } else if (unit === 'dayOfYear') {\n    if (number === 1) {\n      return 'đầu tiên';\n    } else {\n      return 'thứ ' + number;\n    }\n  } // there are no different forms of ordinal numbers in Vietnamese\n\n\n  return number;\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  weekday: buildLocalizeFn(weekdayValues, 'long'),\n  weekdays: buildLocalizeArrayFn(weekdayValues, 'long'),\n  month: buildLocalizeFn(monthValues, 'long'),\n  months: buildLocalizeArrayFn(monthValues, 'long'),\n  timeOfDay: buildLocalizeFn(timeOfDayValues, 'long', function (hours) {\n    return hours / 12 >= 1 ? 1 : 0;\n  }),\n  timesOfDay: buildLocalizeArrayFn(timeOfDayValues, 'long')\n};\nexport default localize;","map":null,"metadata":{},"sourceType":"module"}