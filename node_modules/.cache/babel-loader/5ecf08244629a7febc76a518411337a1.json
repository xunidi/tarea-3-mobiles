{"ast":null,"code":"var _temp,\n    _jsxFileName = \"/Users/Xuni/git/practica walter/reactCourse.CM2019.myFirstApp/src/screens/Home/Home.js\";\n\nimport * as React from 'react';\nimport styles from './Home.module.scss';\nimport WebServices from '../../WebServices/WebServices';\nimport produce from 'immer/dist/immer';\nimport { aliases } from './Helper';\nimport { css } from '@emotion/core';\nimport { ClipLoader } from 'react-spinners';\nexport default (_temp = class Home extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: {},\n      cities: [{\n        name: 'Culiacán',\n        id: 4012176\n      }, {\n        name: 'Oaxaca',\n        id: 3522507\n      }, {\n        name: 'Guadalajara',\n        id: 8133378\n      }, {\n        name: 'Mazatlán',\n        id: 3996322\n      }, {\n        name: 'Monterrey',\n        id: 3995465\n      }],\n      selectedCity: [{\n        name: 'Culiacán',\n        id: '4012176'\n      }],\n      loading: true\n    };\n\n    this.fetchData = async () => {\n      try {} catch (e) {}\n    };\n\n    this.getCityWeaether = async cityId => {\n      try {\n        const nextState = produce(this.state, draft => {\n          draft.loading = true;\n        });\n        this.setState(nextState);\n        const response = await WebServices.getWeatherByCityId({\n          cityId: cityId\n        });\n        const nextState2 = produce(this.state, draft => {\n          draft.response = response;\n          draft.loading = false;\n        });\n        this.setState(nextState2);\n        console.log('TCL: getCityWeaether -> response', response);\n      } catch (e) {}\n    };\n\n    this.showWeaether = cityId => {\n      console.log('TCL: showWeaether -> cityId', cityId);\n      this.getCityWeaether(cityId);\n    };\n\n    this.getGOT = async () => {\n      try {\n        const character = '583';\n        const name = 'morpheus';\n        const job = 'leader';\n        const response = await WebServices.getCharacter({\n          character\n        });\n        const response2 = await WebServices.getListUsers({});\n        console.log('TCL: Home -> fetchData -> response2', response2);\n        const response3 = await WebServices.createFakeApi({\n          name: 'walter',\n          job\n        });\n        console.log('TCL: Home -> fetchData -> response3', response3);\n        const nextState = produce(this.state, draft => {\n          draft.response = response;\n        });\n        this.setState(nextState);\n        aliases(response.aliases);\n      } catch (e) {\n        console.log('TCL: Home -> fetchData -> e', e);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const selectedCity = this.state.selectedCity;\n    this.getCityWeaether(selectedCity[0].id);\n  }\n\n  render() {\n    const _this$state = this.state,\n          response = _this$state.response,\n          cities = _this$state.cities,\n          loading = _this$state.loading;\n    const iconUrl = response && response.weather && 'http://openweathermap.org/img/wn/' + response.weather[0].icon + '@2x.png';\n    console.log('TCL: render -> iconUrl', iconUrl);\n    console.log('TCL: Home -> render -> response', response);\n    return React.createElement(\"div\", {\n      className: styles.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, cities.map(city => {\n      return React.createElement(\"li\", {\n        className: styles.city,\n        onClick: () => this.showWeaether(city.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, city.name);\n    })), React.createElement(\"div\", {\n      className: styles.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Descripci\\xF3n: \", response && response.weather && response.weather[0].description), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Temperatura: \", response && response.main && response.main.temp), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Presi\\xF3n: \", response && response.main && response.main.pressure), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Humedad: \", response && response.main && response.main.humidity), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Temp Min: \", response && response.main && response.main.temp_min), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Temp M\\xE1x: \", response && response.main && response.main.temp_max)), !loading ? React.createElement(\"img\", {\n      src: iconUrl,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"sweet-loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(ClipLoader, {\n      sizeUnit: 'px',\n      size: 50,\n      color: '#123abc',\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))));\n  }\n\n}, _temp); // <div>\n// \t\t\t\t\t<p>Nombre: {response && response.name}</p>\n// \t\t\t\t</div>\n// \t\t\t\t{response &&\n// \t\t\t\tresponse.playedBy &&\n// \t\t\t\tresponse.playedBy.length > 0 && (\n// \t\t\t\t\t<div>\n// \t\t\t\t\t\t<p>Actores: </p>\n// \t\t\t\t\t\t{response.playedBy.map((item) => {\n// \t\t\t\t\t\t\treturn <p>{item}</p>;\n// \t\t\t\t\t\t})}\n// \t\t\t\t\t</div>\n// \t\t\t\t)}\n// \t\t\t\t{response &&\n// \t\t\t\tresponse.aliases &&\n// \t\t\t\tresponse.aliases.length > 0 && (\n// \t\t\t\t\t<div>\n// \t\t\t\t\t\t<p>Actores: </p>\n// \t\t\t\t\t\t{response.aliases.map((item) => {\n// \t\t\t\t\t\t\treturn <p>{item}</p>;\n// \t\t\t\t\t\t})}\n// \t\t\t\t\t</div>\n// \t\t\t\t)}\n// \t\t\t\t<div>\n// \t\t\t\t\t<p>Apodos: {response && response.aliases}</p>\n// \t\t\t\t</div>","map":{"version":3,"sources":["/Users/Xuni/git/practica walter/reactCourse.CM2019.myFirstApp/src/screens/Home/Home.js"],"names":["React","styles","WebServices","produce","aliases","css","ClipLoader","Home","PureComponent","state","response","cities","name","id","selectedCity","loading","fetchData","e","getCityWeaether","cityId","nextState","draft","setState","getWeatherByCityId","nextState2","console","log","showWeaether","getGOT","character","job","getCharacter","response2","getListUsers","response3","createFakeApi","componentDidMount","render","iconUrl","weather","icon","main","map","city","results","description","temp","pressure","humidity","temp_min","temp_max"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from './Home.module.scss';\nimport WebServices from '../../WebServices/WebServices';\nimport produce from 'immer/dist/immer';\nimport { aliases } from './Helper';\n\nimport { css } from '@emotion/core';\nimport { ClipLoader } from 'react-spinners';\n\nexport default (class Home extends React.PureComponent {\n\tstate = {\n\t\tresponse: {},\n\t\tcities: [ { name: 'Culiacán', id: 4012176 }, { name: 'Oaxaca', id: 3522507 }, { name: 'Guadalajara', id: 8133378 }, { name: 'Mazatlán', id: 3996322 }, { name: 'Monterrey', id: 3995465 } ],\n\t\tselectedCity: [ { name: 'Culiacán', id: '4012176' } ],\n\t\tloading: true\n\t};\n\n\tcomponentDidMount() {\n\t\tconst { selectedCity } = this.state;\n\t\tthis.getCityWeaether(selectedCity[0].id);\n\t}\n\n\tfetchData = async () => {\n\t\ttry {\n\t\t} catch (e) {}\n\t};\n\n\tgetCityWeaether = async (cityId) => {\n\t\ttry {\n\t\t\tconst nextState = produce(this.state, (draft) => {\n\t\t\t\tdraft.loading = true;\n\t\t\t});\n\t\t\tthis.setState(nextState);\n\t\t\tconst response = await WebServices.getWeatherByCityId({\n\t\t\t\tcityId: cityId\n\t\t\t});\n\t\t\tconst nextState2 = produce(this.state, (draft) => {\n\t\t\t\tdraft.response = response;\n\t\t\t\tdraft.loading = false;\n\t\t\t});\n\t\t\tthis.setState(nextState2);\n\t\t\tconsole.log('TCL: getCityWeaether -> response', response);\n\t\t} catch (e) {}\n\t};\n\n\tshowWeaether = (cityId) => {\n\t\tconsole.log('TCL: showWeaether -> cityId', cityId);\n\t\tthis.getCityWeaether(cityId);\n\t};\n\n\tgetGOT = async () => {\n\t\ttry {\n\t\t\tconst character = '583';\n\t\t\tconst name = 'morpheus';\n\t\t\tconst job = 'leader';\n\t\t\tconst response = await WebServices.getCharacter({\n\t\t\t\tcharacter\n\t\t\t});\n\n\t\t\tconst response2 = await WebServices.getListUsers({});\n\t\t\tconsole.log('TCL: Home -> fetchData -> response2', response2);\n\n\t\t\tconst response3 = await WebServices.createFakeApi({\n\t\t\t\tname: 'walter',\n\t\t\t\tjob\n\t\t\t});\n\t\t\tconsole.log('TCL: Home -> fetchData -> response3', response3);\n\t\t\tconst nextState = produce(this.state, (draft) => {\n\t\t\t\tdraft.response = response;\n\t\t\t});\n\t\t\tthis.setState(nextState);\n\t\t\taliases(response.aliases);\n\t\t} catch (e) {\n\t\t\tconsole.log('TCL: Home -> fetchData -> e', e);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { response, cities, loading } = this.state;\n\t\tconst iconUrl = response && response.weather && 'http://openweathermap.org/img/wn/' + response.weather[0].icon + '@2x.png';\n\t\tconsole.log('TCL: render -> iconUrl', iconUrl);\n\t\tconsole.log('TCL: Home -> render -> response', response);\n\n\t\treturn (\n\t\t\t<div className={styles.main}>\n\t\t\t\t<ul>\n\t\t\t\t\t{cities.map((city) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li className={styles.city} onClick={() => this.showWeaether(city.id)}>\n\t\t\t\t\t\t\t\t{city.name}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t<div className={styles.results}>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Descripción: {response && response.weather && response.weather[0].description}</li>\n\t\t\t\t\t\t<li>Temperatura: {response && response.main && response.main.temp}</li>\n\t\t\t\t\t\t<li>Presión: {response && response.main && response.main.pressure}</li>\n\t\t\t\t\t\t<li>Humedad: {response && response.main && response.main.humidity}</li>\n\t\t\t\t\t\t<li>Temp Min: {response && response.main && response.main.temp_min}</li>\n\t\t\t\t\t\t<li>Temp Máx: {response && response.main && response.main.temp_max}</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t<img src={iconUrl} alt=\"\" />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"sweet-loading\">\n\t\t\t\t\t\t\t<ClipLoader sizeUnit={'px'} size={50} color={'#123abc'} loading={this.state.loading} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n});\n\n// <div>\n// \t\t\t\t\t<p>Nombre: {response && response.name}</p>\n// \t\t\t\t</div>\n\n// \t\t\t\t{response &&\n// \t\t\t\tresponse.playedBy &&\n// \t\t\t\tresponse.playedBy.length > 0 && (\n// \t\t\t\t\t<div>\n// \t\t\t\t\t\t<p>Actores: </p>\n// \t\t\t\t\t\t{response.playedBy.map((item) => {\n// \t\t\t\t\t\t\treturn <p>{item}</p>;\n// \t\t\t\t\t\t})}\n// \t\t\t\t\t</div>\n// \t\t\t\t)}\n\n// \t\t\t\t{response &&\n// \t\t\t\tresponse.aliases &&\n// \t\t\t\tresponse.aliases.length > 0 && (\n// \t\t\t\t\t<div>\n// \t\t\t\t\t\t<p>Actores: </p>\n// \t\t\t\t\t\t{response.aliases.map((item) => {\n// \t\t\t\t\t\t\treturn <p>{item}</p>;\n// \t\t\t\t\t\t})}\n// \t\t\t\t\t</div>\n// \t\t\t\t)}\n\n// \t\t\t\t<div>\n// \t\t\t\t\t<p>Apodos: {response && response.aliases}</p>\n// \t\t\t\t</div>\n"]},"metadata":{},"sourceType":"module"}